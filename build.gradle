plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'ru.micron'
version '1.0'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
wrapper.gradleVersion = '6.7'

compileJava.options.encoding = 'windows-1251'
compileTestJava.options.encoding = 'windows-1251'

jar {
    manifest {
        attributes "Main-Class": "ru.micron.Main"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.30'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'
    testCompile group: 'junit', name: 'junit', version: '4.13.1'
}

test {
    useJUnitPlatform()
}